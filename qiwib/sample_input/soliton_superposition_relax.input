%%% This example file creates a bright soliton suitable for the
%%% propagation given in the soliton_superposition.input file.

%% Propagation Properties
	pa.relaxation = 0;

%% essential Inputvariables for the system						
	pa.N=90;
	pa.M=2;
	pa.g= -0.04;
	pa.Ng=71;
	pa.L=14;
	pa.xpos0=-7;

%% Propagation details for mean fields and saving
	pa.dE_limit = 1E-8;
	pa.CMF_error = 1E-4;
	pa.save_step = 1.0;
	pa.save_options = [1,1,1,1,1];

%% Integrators
	pa.improved_rlx = 'fixed';
	pa.ode_phi = "RK78";		
	pa.ode_phi_opts = odeset("AbsTol",1e-10,"InitialStep",1e-4,"MaxStep",1e-2,"RelTol",1e-10);
	pa.ode_C = "eigs";
	pa.ode_C_opts = [20,40,1E-9];

%% cosmetic options (show plots during propagation)
	pa.show_plot = 1;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% define potential for initial diagonlisation, i.e. initial basis
	pa.H_update_step = 1.0;			% time step for updating Hamiltonian

%% define time-dependent prefactors for Hamiltonian	
	function hamiltonian_t(t)
		mlock(); global pa

		pa.V = exp(-t/1)*1.0*([pa.xpos0+2.5:pa.L/(pa.Ng-1):pa.xpos0+2.5+pa.L]').^2;
		if t>10, pa.V = 0; end

		pa.H_Diff = 0;
		pa.H_Diff2 = -1/2;
		pa.g = pa.g;

	endfunction
