%%% This example file calculates stationary states in a double well.
%%% In the case of a ground state one finds that for large barrier
%%% the state is fragmented with seperate condensates in each of the
%%% wells. Look at the plot_NO function to visualise this.

%% Propagation Properties
	pa.relaxation = 0;

%% essential Inputvariables for the system
	pa.N=6;
	pa.M=6;
	pa.g= 1.0;
	pa.Ng=101;
	pa.L=6;
	pa.xpos0=-3;

	pa.nl = 0; pa.nr = 0; %% see spatial_population file for the population of left and right well

%% Propagation details for mean fields and saving

	pa.dE_limit = 1E-6;
	pa.save_step = 0.1;
	pa.save_options = [1,1,1,1,1];

%% Integrators
	pa.improved_rlx = 'fixed';
	pa.ode_phi = "RK78";
	pa.ode_phi_opts = odeset("AbsTol",1e-10,"InitialStep",1e-4,"MaxStep",1e-2,"RelTol",1e-10);
	pa.ode_C = "eigs";
	pa.ode_C_opts = [20,40,1E-9];
        %pa.ode_C = "RK78";
        %pa.ode_C_opts = odeset("AbsTol",1e-10,"InitialStep",1e-4,"MaxStep",1e-2,"RelTol",1e-10);

%% cosmetic options (show plots during propagation)
	pa.show_plot = 1;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% define potential for initial diagonlisation, i.e. initial basis
	pa.V_build = 1.0*([pa.xpos0+1:pa.L/(pa.Ng-1):pa.xpos0+1+pa.L]').^2;

%% define time-dependent prefactors for Hamiltonian	
	function hamiltonian_t(t)
		mlock(); global pa

		h = 1; %% barrier height in the middle
		x = [pa.xpos0:pa.L/(pa.Ng-1):pa.xpos0+pa.L]';
		pa.V =  h * (x.^2-1).^2;

		pa.H_Diff2 = -1/2;
		pa.g = pa.g;

	endfunction
